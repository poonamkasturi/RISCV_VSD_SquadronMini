# Task_1_readme
TASK-1:
A: Write a simple C code and compile it with gcc comipler.
B: Compile the same code with RISCV comipler to generate the assembly code for the same. Further Evaluate RISCV assembly code for the sample C code with two different options of comiplation.
NECESSARY INSTALLATIONS
Step 1: Setting up the virtual environment to work on
Install Oracle Virtual Box, VMBox
Launch Virtual Machine on VMBox
Attach the VDI file to the Virtual Machine instance in VMBox
Step 2: Install Leafpad - the word editor
$    sudo apt install leafpad <br/>
TASK 1A - COMPILE AND EXECUTE A SIMPLE C CODE USING GCC COMPILER
$   cd <br/>                           Navigate to home directory:<br>
$   leafpad filename.c & <br/>         This opens a blank file with filename.c, type the c code
image Save the file
Come back to terminal
Press entre to come to the home prompt
To see the results Run the following commands

$    gcc filename.c <br>
$    ./a.out <br>
image Change the value of n in filename.c
Recompile and see the results
image

TASK-1B: ASSEMBLY CODE ON RISCV COMPILER AND GCC COMPILER
cat sum1to9.c --shows the content of the *.c file on the terminal tab

$    riscv64-unknown-elf-gcc -O1 -mabl=lp64 -march=rv64i -o sum1to9.o sum1to9.c <br>       .. creates an object file for source file, before linking them together, into the final executable.<br>
image

To see the contents of the *.o object file
In a new tab execute the command

$    riscv64-unknown-elf-objdump -d sum1to9.o <br>
image

To look into the assembly code generated by RISCV compiler execute the command

$    riscv64-unknown-elf-objdump -d sum1to9.o | less <br>
image

To look for the assembly code corresponding to main ()

type /main
image

Highlight main and press n to find where all it is

image

Starting address of main is 10184 and the next block is at 101c0
To find the total memory locations (space) taken by main 101c0 – 10184 = 3C (These values are in hex)
3C (hex) = 60 (decimal)
No of instructions = (101C0 – 10184)/4 = 15 (divide by 4 because each instruction is taking 4 bytes)

The number of assembly instructions generated is 15 with option -O1

Execute the command with -Ofast option in Tab 1 and see the difference

$    Riscv64-unknown-elf-gcc -Ofast -mabl=lp64 -march=rv64i -o sum1to9.o sum1to9.c <br>
image

Run the commands again In tab 2 to examine the assembly code generated
$ riscv64-unknown-elf-objdump -d sum1to9.o
$ riscv64-unknown-elf-objdump -d sum1to9.o | less

image

image

type /main
Highlight main and press n to find where all it is
image

Starting address of main is 100b0 and the next block is at 100e0
To find the total memory locations (space) taken by main 100e0 – 100bo = 30 (These values are in hex)
3C (hex) = 48 (decimal)
No of instructions = (101C0 – 10184)/4 = 12 (divide by 4 because each instruction is taking 4 bytes)

The number of assembly instructions generated is 12 with option -Ofast
